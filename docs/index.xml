<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Universal</title>
    <link>https://ckzer.github.io/teamWebPage/</link>
    <description>Recent content on Universal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 May 2023 21:29:20 +0200</lastBuildDate><atom:link href="https://ckzer.github.io/teamWebPage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS</title>
      <link>https://ckzer.github.io/teamWebPage/web/css-post/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/web/css-post/</guid>
      <description>CSS란?  CSS는 Cascading Style Sheets의 약자로 기본적인 스타일이 이미 지정된 HTML 요소를 개발자가 직접 다양한 스타일로 디자인할 수 있는 언어입니다.
CSS는 HTML과 함께 웹을 구성하는 기본 프로그래밍 요소 입니다. HTML이 텍스트나 이미지, 표와 같은 구성 요소를 웹 문서에 넣어 뼈대를 만드는 것이라면 CSS는 색상이나 크기, 이미지 크기나 위치, 배치 방법 등 웹 문서의 디자인 요소를 담당 합니다.
 CSS는 Cascading Style Sheet의 약어. CSS는 HTML로 부터 디자인적인 요소를 분리해 정의할 수 있음.</description>
    </item>
    
    <item>
      <title>GIT 개요와 사용법</title>
      <link>https://ckzer.github.io/teamWebPage/git/git-post1/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/git/git-post1/</guid>
      <description>GIT 개요  분산 버전 관리 시스템 2005년 리누스 토발즈가 개발 라이선스: GPL V2.0 개발배경  2002년부터 리눅스 버전 관리시스템으로 BitKeeper(BitMover사의 상용 SW, 2016년 오픈소스, 개발 중단) 사용 BitMover사가 리눅스 개발자들이 무료로 사용할 수 있도록 하였으나, 앤드루 트리젤이 비슷한 소스 풀러를 만들면서 리눅스 개발자들에 대한 무료 사용을 철회 리누스 토발즈가 다른 오픈소스 버전관리 시스템을 사용하려 하였으나 당시 원하는 기능을 만족하는 SW가 없어서 직접 만들게 됨 그 후 리눅스 버전 관리 시스템으로 사용되면 현재 가장 많이 사용되는 버전 관리 시스템이 됨    GIT 목표  빠른 속도 단순한 구조 비선형적 개발(동시 다발적 브랜치) 완벽한 분산 Linux 커널 같은 대형 프로젝트에서 유용  GIT CLI GIT을 사용하는 방법  git CLI 다양한 GUI 지원 SW 존재 git의 모든 기능을 지원하는 SW는 git CLI  GIT 설치  리눅스에는 기본적으로 설치되어 있음 없을 경우 sudo apt install git  작업 디렉토리 생성  ex) mkdir -p ~/projects/w11/git-ex  git 저장소 생성  git init : 작업 디렉토리 git 저장소로 초기화 git branch : 브랜치 보기, 기본 브랜치는 main  git 업그레이드  sudo add-apt-repository ppa:git-core/ppa -y sudo apt update sudo apt install git -y  git 저장소 재생성  git 저장소 삭제 &amp;amp; 디렉토리 삭제 git init 실행 브랜치 확인  GIT CLI 사용법 소스 관리   관리 대상 여부</description>
    </item>
    
    <item>
      <title>GITHUB</title>
      <link>https://ckzer.github.io/teamWebPage/git/git-post2/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/git/git-post2/</guid>
      <description>GITHUB  git을 기반으로 한 원격 저장소 호스팅 서비스 계정을 만들고 사용 라이선스: GPL V2.0 &amp;ldquo;2FA&amp;rdquo;(투팩터 인증)을 설정 ssh key 생성과 계정에 추가  보안 설정과 ssh키 저장  &amp;ldquo;2FA&amp;rdquo;(투팩터 인증)을 설정 SSH key 추가  WSL에서 키를 생성한 후 공개키를 복사하여 github에 등록    저장소 만들기 &amp;amp; clone  github에서 repository 생성 원격 저장소 clone  clone URL 복사 WSL에서 작업  cd ~/projects git clone       markdown 목록 번호 있는 목록 : 내림차순 정렬  첫번째 세번째 두번째  번호 없는 목록 : *, -, +  첫번째   세번째   두번째    빨강 녹색 파랑  강조 single asterisks single underscores double asterisks double underscores cancelline</description>
    </item>
    
    <item>
      <title>HTML</title>
      <link>https://ckzer.github.io/teamWebPage/web/html-post/</link>
      <pubDate>Sun, 28 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/web/html-post/</guid>
      <description>HTML이란?  HTML은 Hypertext Markup Language의 약자로 웹 페이지를 만드는 데 사용하는 언어입니다. 따라서 우리가 브라우저를 통해 보는 페이지는 모두 HTML로 작성되어 있습니다.
HTML에서 Hypertext의 의미는 링크를 통해 다른 문서로 이동할 수 있는 문서를 뜻합니다. 하이퍼텍스트라는 개념이 등장하기 전에는 방대한 양의 문서를 효율적으로 다루기 위해 색인 또는 다양한 문서 분류법이 사용되었습니다. 하지만 웹이 등장하면서 HTML 문서를 이용해 문서 간의 참조가 자유로워짐에 따라 특정 단어가 담긴 문서를 쉽게 검색할 수 있게 되었습니다.</description>
    </item>
    
    <item>
      <title>Container</title>
      <link>https://ckzer.github.io/teamWebPage/container/container/</link>
      <pubDate>Sat, 27 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/container/container/</guid>
      <description>Container 현대의 소프트웨어 개발과 배포는 더욱 복잡해지고 다양한 요구사항을 충족시키기 위해 진화하고 있습니다. 이러한 환경에서 컨테이너 기술은 혁신적인 솔루션으로 주목받고 있습니다. 이번 글에서는 컨테이너의 개념과 장점에 대해 알아보겠습니다.
Container란? - OS 수준 가상화 컨테이너는 애플리케이션과 애플리케이션의 종속성을 포함한 모든 필요한 요소를 격리된 환경에서 실행하는 기술입니다. 이는 가상화 기술을 사용하여 호스트 운영 체제에서 분리되고, 필요한 라이브러리와 패키지를 가상화된 환경 내에 포함시킴으로써 실제 운영 환경과의 일관성을 유지할 수 있습니다.
Container 기술의 장점  일관성 있는 환경 - 종속성과 호환성 충돌 문제 제거 작은 이미지 크기 성능 저하 최소 부팅 필요없이 즉시 실행, 종료 배포 편이성 재사용 용이 다양한 운영 환경 지원  컨테이너 기술은 현대 소프트웨어 개발과 배포에서 중요한 역할을 수행하고 있습니다.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://ckzer.github.io/teamWebPage/container/docker/</link>
      <pubDate>Sat, 27 May 2023 21:29:20 +0200</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/container/docker/</guid>
      <description>Docker 도커는 가장 대표적인 컨테이너 기술을 기반으로한 애플리케이션 실행 및 배포를 위한 오픈 소스 플랫폼입니다. 이번 글에서는 도커의 기본 개념과 구성 요소, 에 대해 설명하고 기본적인 명령어를 알아보겠습니다.
도커 이미지? 도커 컨테이너? 도커는 이미지(Image)와 컨테이너(Container)라는 기본 개념으로 구성되어 있습니다.
-도커 이미지(Image): 컨테이너 실행을 위한 읽기 전용 템플릿 파일입니다. 소스코드, 라이브러리, 종속성, 도구 및 응용 프로그램을 실행하는 데 필요한 기타 파일을 포함하는 &amp;lsquo;불변파일&amp;rsquo;이며 특정 시점의 애플리케이션과 가상 환경을 포함합니다. 하나의 이미지로 여러 개의 컨테이너를 실행하는 것이 가능합니단.</description>
    </item>
    
    <item>
      <title>Linux 개요</title>
      <link>https://ckzer.github.io/teamWebPage/linux/linux-post1/</link>
      <pubDate>Mon, 22 May 2023 18:26:23 +0900</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/linux/linux-post1/</guid>
      <description>Linux 개요 Linux란 Linux Kernel 기반의 오픈 소스 Unix 계열 (Unix like) 운영체제들을 의미한다. 유닉스 계열 (Unix like) : 유닉스와 비슷하면서 유닉스가 아니다 는 뜻으로 유닉스 (UNIX) 와는 별개의 용어이다.
OS 구성 운영체제 (OS; Operating System) 의 구성
 kernel Library Utilities User Interface  OS Kernel OS Kernel 운영체제의 핵심 , 하드웨어 자원을 관리하고 프로그램을 실행하게 함
커널의기능 커널은다음과 같은 4 가지 기능을 수행
 메모리 관리: 메모리가 어디에서 무엇을 저장하는 데 얼마나 사용되는지를 추적 프로세스 관리: 어느 프로세스가 중앙 처리 장치(CPU)를 언제 얼마나 오랫동안 사용할지를 결정 장치 드라이버: 하드웨어와 프로세스 사이에서 중재자/인터프리터의 역할을 수행 시스템 호출 및 보안: 프로세스의 서비스 요청을 수신  Kernel 종류 Single-tasking and multi-tasking</description>
    </item>
    
    <item>
      <title>Linux 사용법</title>
      <link>https://ckzer.github.io/teamWebPage/linux/linux-post2/</link>
      <pubDate>Mon, 22 May 2023 18:26:23 +0900</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/linux/linux-post2/</guid>
      <description>Linux shell OS shell
 운영 체제 상에서 다양한 운영 체제 기능과 서비스를 구현하는 인터페이스를 제공하는 프로그램 셸은 일반적으로 명령 줄과 그래픽 형의 두 종류로 분류 CLI(명령줄 인터페이스) GUI(그래픽 사용자 인터페이스)  Unix 계열 CLI
 본셸 : sh 배시 : bash z셸 : zsh CLI(명령줄 인터페이스) GUI(그래픽 사용자 인터페이스)  Windows CLI
 도스 프롬프트 :command.com(과거 윈도우) 명령 프롬프트 : cmd.exe 파워셸 : powershell.exe  Linux용 GUI Linux는 GUI는 독립적으로 설치하여 사용</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://ckzer.github.io/teamWebPage/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/contact/</guid>
      <description>We are here to help you Are you curious about something? Do you have some kind of problem with our products? As am hastily invited settled at limited civilly fortune me. Really spring in extent an by. Judge but built gay party world. Of so am he remember although required. Bachelor unpacked be advanced at. Confined in declared marianne is vicinity.
Please feel free to contact us, our customer service center is working for you 24/7.</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://ckzer.github.io/teamWebPage/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ckzer.github.io/teamWebPage/faq/</guid>
      <description>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.
1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER? Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.</description>
    </item>
    
  </channel>
</rss>
